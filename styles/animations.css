/* Опишите в этом файле все keyframes для проекта и стили анимаций иконки Like.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/
/*анимация сердечка*/
.sparks {
  opacity: 0%;
}

.core {
  fill: transparent;
  transition: fill 0.3s linear;
  transition-delay: 0.03s;
}

.main-body {
  fill: transparent;
  transition: fill 0.3s linear;
}

.contour {
  transition: fill 0.1s linear;
}

.like-icon:hover .core {
  fill: var(--color-black);
  transition: fill 0.3s linear;
}

.like-icon:hover .main-body {
  fill: var(--color-black);
  transition: fill 0.3s linear;
  transition-delay: 0.05s;
}

.like-icon:active .core {
  fill: var(--color-sparks); 
  transition: fill 0.3s linear;
}

.like-icon:active .main-body {
  fill: var(--color-sparks); 
  transition: fill 0.3s linear;
  transition-delay: 0.05s; 
}

.like-icon.is-liked .core {
  fill: var(--color-sparks); 
  transition: fill 0.3s linear;
}

.like-icon.is-liked .main-body {
  fill: var(--color-sparks);
  transition: fill 0.3s linear;
  transition-delay: 0.05s;  
}

.like-icon.is-liked .contour {
  fill: var(--color-sparks);
  transition: fill 0.3s linear;
  transition-delay: 0.06s;
}

@keyframes fadeInHeart {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(1.25);
  }

}

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: fadeInHeart 0.3s ease-in 0.1s 1 alternate;
}

.like-icon.is-liked .sparks {
  animation: fadeInSparks 0.3s ease-in 0.3s 1 alternate;
}

@keyframes fadeInSparks {
  0% {
    opacity: 0%;
  }

  100% {
    opacity: 100%;
  }
}
/*анимация Like, Сохранить на память*/
.button__animation::after{
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  color: var(--color-white);
  background-color: var(--color-white);
  transition: transform 0.5s ease; 
  transform: translateX(-100%);
  mix-blend-mode: difference;
}

.button__animation:hover::after {
  transform: translateX(0);
}

.button__animation:focus {
  outline: none;
}

.button__animation:focus-visible {
  box-shadow: 2px 2px var(--color-black);
  transition: box-shadow 0.3s ease;
}